# adapted from https://docs.ansible.com/ansible/latest/scenario_guides/guide_gce.html

   - name: create a disk
     gcp_compute_disk:
         name: "{{ inventory_hostname }}-disk-instance"
         size_gb: 10
         source_image: 'projects/debian-cloud/global/images/family/debian-10'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk
   - name: create a address
     gcp_compute_address:
         name: "{{ inventory_hostname }}-address-instance"
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address

     # Make furture ssh connections use the external ip address
     # a more sophisticated setup could use an bastion host instead
   - name: Determine remote address
     set_fact:
       ansible_host: "{{ address.address }}"

   - name: create a instance
     gcp_compute_instance:
         state: present
         name: "{{ inventory_hostname }}"
         machine_type: "{{ machine_type }}"
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk }}"
         network_interfaces:
             - network: null # use default
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address }}"
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         tags:
           items:
             - "http-server" # instructs the firewall to pass http traffic
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance

   - name: Wait for SSH to come up
     wait_for: host={{ address.address }} port=22 delay=10 timeout=60
